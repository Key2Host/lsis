{"version":3,"file":"js/217.d7ed6b2b.js","mappings":"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","sources":["webpack://webapp/./src/apps/cp/views/utils/ComingSoon.vue","webpack://webapp/./node_modules/@chenfengyuan/vue-countdown/dist/vue-countdown.esm.js","webpack://webapp/./src/apps/cp/views/utils/ComingSoon.vue?2473"],"sourcesContent":["<script>\nimport { useAppOptionStore } from '@/apps/cp/stores/app-option';\nimport VueCountdown from '@chenfengyuan/vue-countdown';\n\nconst appOption = useAppOptionStore();\n\nexport default {\n\tdata() {\n\t\tconst now = new Date();\n\t\tconst newYear = new Date(2025, 6, 26);\n\n\t\treturn {\n\t\t\tyear: (new Date()).getFullYear(),\n\t\t\ttime: newYear - now,\n\t\t}\n\t},\n\tcomponents: {\n\t\tVueCountdown: VueCountdown\n\t},\n\tmounted() {\n\t\tappOption.appSidebarHide = true;\n\t\tappOption.appHeaderHide = true;\n\t\tappOption.appContentClass = 'p-0';\n\t},\n\tbeforeUnmount() {\n\t\tappOption.appSidebarHide = false;\n\t\tappOption.appHeaderHide = false;\n\t\tappOption.appContentClass = '';\n\t}\n}\n</script>\n<template>\n\t<!-- BEGIN coming-soon -->\n\t<div class=\"coming-soon\">\n\t\t<div class=\"flex-1\">\n\t\t\t<!-- BEGIN coming-soon-content -->\n\t\t\t<div class=\"coming-soon-content\">\n\t\t\t\t<div class=\"coming-soon-img mb-4\"><img src=\"/assets/img/page/coming-soon.svg\" alt=\"\" /></div>\n\t\t\t\t<div class=\"coming-soon-timer mb-3\">\n\t\t\t\t\t<div class=\"is-countdown text-center\">\n\t\t\t\t\t\t<vue-countdown class=\"countdown-row countdown-show4\" :time=\"time\"\n\t\t\t\t\t\t\tv-slot=\"{ days, hours, minutes, seconds }\">\n\t\t\t\t\t\t\t<span class=\"countdown-section\">\n\t\t\t\t\t\t\t\t<span class=\"countdown-amount d-block\">{{ days }}</span>\n\t\t\t\t\t\t\t\t<span class=\"countdown-period d-block\">{{ $t(\"TIME.DAYS\") }}</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"countdown-section\">\n\t\t\t\t\t\t\t\t<span class=\"countdown-amount d-block\">{{ hours }}</span>\n\t\t\t\t\t\t\t\t<span class=\"countdown-period d-block\">{{ $t(\"TIME.HOURS\") }}</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"countdown-section\">\n\t\t\t\t\t\t\t\t<span class=\"countdown-amount d-block\">{{ minutes }}</span>\n\t\t\t\t\t\t\t\t<span class=\"countdown-period d-block\">{{ $t(\"TIME.MINUTES\") }}</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"countdown-section\">\n\t\t\t\t\t\t\t\t<span class=\"countdown-amount d-block\">{{ seconds }}</span>\n\t\t\t\t\t\t\t\t<span class=\"countdown-period d-block\">{{ $t(\"TIME.SECONDS\") }}</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</vue-countdown>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<h2 class=\"mb-1\">{{ $t(\"COMINGSOON.TITLE\") }}</h2>\n\t\t\t\t<p class=\"mb-0\">{{ $t(\"COMINGSOON.L1\") }}<br /> {{ $t(\"COMINGSOON.L2\") }}</p>\n\t\t\t\t<div class=\"fixed-bottom mb-2 text-center small text-inverse text-opacity-50\">\n\t\t\t\t\t&copy; {{ year }} <a href=\"https://unisuite.de/\" target=\"_blank\">{{ $t(\"APP.NAME\") }}</a> - {{\n\t\t\t\t\t\t$t(\"APP.LIC\") }}.\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<!-- END coming-soon-content -->\n\t\t</div>\n\t</div>\n\t<!-- END coming-soon -->\n</template>","/*! vue-countdown v2.1.2 | (c) 2018-present Chen Fengyuan | MIT */\nimport { defineComponent, h } from 'vue';\n\nconst MILLISECONDS_SECOND = 1000;\r\nconst MILLISECONDS_MINUTE = 60 * MILLISECONDS_SECOND;\r\nconst MILLISECONDS_HOUR = 60 * MILLISECONDS_MINUTE;\r\nconst MILLISECONDS_DAY = 24 * MILLISECONDS_HOUR;\r\nconst EVENT_ABORT = 'abort';\r\nconst EVENT_END = 'end';\r\nconst EVENT_PROGRESS = 'progress';\r\nconst EVENT_START = 'start';\r\nconst EVENT_VISIBILITY_CHANGE = 'visibilitychange';\r\nvar index = defineComponent({\r\n    name: 'VueCountdown',\r\n    props: {\r\n        /**\r\n         * Starts the countdown automatically when initialized.\r\n         */\r\n        autoStart: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n        /**\r\n         * Emits the countdown events.\r\n         */\r\n        emitEvents: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n        /**\r\n         * The interval time (in milliseconds) of the countdown progress.\r\n         */\r\n        interval: {\r\n            type: Number,\r\n            default: 1000,\r\n            validator: (value) => value >= 0,\r\n        },\r\n        /**\r\n         * Generate the current time of a specific time zone.\r\n         */\r\n        now: {\r\n            type: Function,\r\n            default: () => Date.now(),\r\n        },\r\n        /**\r\n         * The tag name of the component's root element.\r\n         */\r\n        tag: {\r\n            type: String,\r\n            default: 'span',\r\n        },\r\n        /**\r\n         * The time (in milliseconds) to count down from.\r\n         */\r\n        time: {\r\n            type: Number,\r\n            default: 0,\r\n            validator: (value) => value >= 0,\r\n        },\r\n        /**\r\n         * Transforms the output props before render.\r\n         */\r\n        transform: {\r\n            type: Function,\r\n            default: (props) => props,\r\n        },\r\n    },\r\n    emits: [\r\n        EVENT_ABORT,\r\n        EVENT_END,\r\n        EVENT_PROGRESS,\r\n        EVENT_START,\r\n    ],\r\n    data() {\r\n        return {\r\n            /**\r\n             * It is counting down.\r\n             * @type {boolean}\r\n             */\r\n            counting: false,\r\n            /**\r\n             * The absolute end time.\r\n             * @type {number}\r\n             */\r\n            endTime: 0,\r\n            /**\r\n             * The remaining milliseconds.\r\n             * @type {number}\r\n             */\r\n            totalMilliseconds: 0,\r\n            /**\r\n             * The request ID of the requestAnimationFrame.\r\n             * @type {number}\r\n             */\r\n            requestId: 0,\r\n        };\r\n    },\r\n    computed: {\r\n        /**\r\n         * Remaining days.\r\n         * @returns {number} The computed value.\r\n         */\r\n        days() {\r\n            return Math.floor(this.totalMilliseconds / MILLISECONDS_DAY);\r\n        },\r\n        /**\r\n         * Remaining hours.\r\n         * @returns {number} The computed value.\r\n         */\r\n        hours() {\r\n            return Math.floor((this.totalMilliseconds % MILLISECONDS_DAY) / MILLISECONDS_HOUR);\r\n        },\r\n        /**\r\n         * Remaining minutes.\r\n         * @returns {number} The computed value.\r\n         */\r\n        minutes() {\r\n            return Math.floor((this.totalMilliseconds % MILLISECONDS_HOUR) / MILLISECONDS_MINUTE);\r\n        },\r\n        /**\r\n         * Remaining seconds.\r\n         * @returns {number} The computed value.\r\n         */\r\n        seconds() {\r\n            return Math.floor((this.totalMilliseconds % MILLISECONDS_MINUTE) / MILLISECONDS_SECOND);\r\n        },\r\n        /**\r\n         * Remaining milliseconds.\r\n         * @returns {number} The computed value.\r\n         */\r\n        milliseconds() {\r\n            return Math.floor(this.totalMilliseconds % MILLISECONDS_SECOND);\r\n        },\r\n        /**\r\n         * Total remaining days.\r\n         * @returns {number} The computed value.\r\n         */\r\n        totalDays() {\r\n            return this.days;\r\n        },\r\n        /**\r\n         * Total remaining hours.\r\n         * @returns {number} The computed value.\r\n         */\r\n        totalHours() {\r\n            return Math.floor(this.totalMilliseconds / MILLISECONDS_HOUR);\r\n        },\r\n        /**\r\n         * Total remaining minutes.\r\n         * @returns {number} The computed value.\r\n         */\r\n        totalMinutes() {\r\n            return Math.floor(this.totalMilliseconds / MILLISECONDS_MINUTE);\r\n        },\r\n        /**\r\n         * Total remaining seconds.\r\n         * @returns {number} The computed value.\r\n         */\r\n        totalSeconds() {\r\n            return Math.floor(this.totalMilliseconds / MILLISECONDS_SECOND);\r\n        },\r\n    },\r\n    watch: {\r\n        $props: {\r\n            deep: true,\r\n            immediate: true,\r\n            /**\r\n             * Update the countdown when props changed.\r\n             */\r\n            handler() {\r\n                this.totalMilliseconds = this.time;\r\n                this.endTime = this.now() + this.time;\r\n                if (this.autoStart) {\r\n                    this.start();\r\n                }\r\n            },\r\n        },\r\n    },\r\n    mounted() {\r\n        document.addEventListener(EVENT_VISIBILITY_CHANGE, this.handleVisibilityChange);\r\n    },\r\n    beforeUnmount() {\r\n        document.removeEventListener(EVENT_VISIBILITY_CHANGE, this.handleVisibilityChange);\r\n        this.pause();\r\n    },\r\n    methods: {\r\n        /**\r\n         * Starts to countdown.\r\n         * @public\r\n         * @emits Countdown#start\r\n         */\r\n        start() {\r\n            if (this.counting) {\r\n                return;\r\n            }\r\n            this.counting = true;\r\n            if (!this.autoStart) {\r\n                this.totalMilliseconds = this.time;\r\n                this.endTime = this.now() + this.time;\r\n            }\r\n            if (this.emitEvents) {\r\n                /**\r\n                 * Countdown start event.\r\n                 * @event Countdown#start\r\n                 */\r\n                this.$emit(EVENT_START);\r\n            }\r\n            if (document.visibilityState === 'visible') {\r\n                this.continue();\r\n            }\r\n        },\r\n        /**\r\n         * Continues the countdown.\r\n         * @private\r\n         */\r\n        continue() {\r\n            if (!this.counting) {\r\n                return;\r\n            }\r\n            const delay = Math.min(this.totalMilliseconds, this.interval);\r\n            if (delay > 0) {\r\n                let init;\r\n                let prev;\r\n                const step = (now) => {\r\n                    if (!init) {\r\n                        init = now;\r\n                    }\r\n                    if (!prev) {\r\n                        prev = now;\r\n                    }\r\n                    const range = now - init;\r\n                    if (range >= delay\r\n                        // Avoid losing time about one second per minute (now - prev ≈ 16ms) (#43)\r\n                        || range + ((now - prev) / 2) >= delay) {\r\n                        this.progress();\r\n                    }\r\n                    else {\r\n                        this.requestId = requestAnimationFrame(step);\r\n                    }\r\n                    prev = now;\r\n                };\r\n                this.requestId = requestAnimationFrame(step);\r\n            }\r\n            else {\r\n                this.end();\r\n            }\r\n        },\r\n        /**\r\n         * Pauses the countdown.\r\n         * @private\r\n         */\r\n        pause() {\r\n            cancelAnimationFrame(this.requestId);\r\n        },\r\n        /**\r\n         * Progresses to countdown.\r\n         * @private\r\n         * @emits Countdown#progress\r\n         */\r\n        progress() {\r\n            if (!this.counting) {\r\n                return;\r\n            }\r\n            this.update();\r\n            if (this.emitEvents && this.totalMilliseconds > 0) {\r\n                /**\r\n                 * Countdown progress event.\r\n                 * @event Countdown#progress\r\n                 */\r\n                this.$emit(EVENT_PROGRESS, {\r\n                    days: this.days,\r\n                    hours: this.hours,\r\n                    minutes: this.minutes,\r\n                    seconds: this.seconds,\r\n                    milliseconds: this.milliseconds,\r\n                    totalDays: this.totalDays,\r\n                    totalHours: this.totalHours,\r\n                    totalMinutes: this.totalMinutes,\r\n                    totalSeconds: this.totalSeconds,\r\n                    totalMilliseconds: this.totalMilliseconds,\r\n                });\r\n            }\r\n            this.continue();\r\n        },\r\n        /**\r\n         * Aborts the countdown.\r\n         * @public\r\n         * @emits Countdown#abort\r\n         */\r\n        abort() {\r\n            if (!this.counting) {\r\n                return;\r\n            }\r\n            this.pause();\r\n            this.counting = false;\r\n            if (this.emitEvents) {\r\n                /**\r\n                 * Countdown abort event.\r\n                 * @event Countdown#abort\r\n                 */\r\n                this.$emit(EVENT_ABORT);\r\n            }\r\n        },\r\n        /**\r\n         * Ends the countdown.\r\n         * @public\r\n         * @emits Countdown#end\r\n         */\r\n        end() {\r\n            if (!this.counting) {\r\n                return;\r\n            }\r\n            this.pause();\r\n            this.totalMilliseconds = 0;\r\n            this.counting = false;\r\n            if (this.emitEvents) {\r\n                /**\r\n                 * Countdown end event.\r\n                 * @event Countdown#end\r\n                 */\r\n                this.$emit(EVENT_END);\r\n            }\r\n        },\r\n        /**\r\n         * Updates the count.\r\n         * @private\r\n         */\r\n        update() {\r\n            if (this.counting) {\r\n                this.totalMilliseconds = Math.max(0, this.endTime - this.now());\r\n            }\r\n        },\r\n        /**\r\n         * Restarts the count.\r\n         * @public\r\n         */\r\n        restart() {\r\n            this.pause();\r\n            this.totalMilliseconds = this.time;\r\n            this.endTime = this.now() + this.time;\r\n            this.counting = false;\r\n            this.start();\r\n        },\r\n        /**\r\n         * visibility change event handler.\r\n         * @private\r\n         */\r\n        handleVisibilityChange() {\r\n            switch (document.visibilityState) {\r\n                case 'visible':\r\n                    this.update();\r\n                    this.continue();\r\n                    break;\r\n                case 'hidden':\r\n                    this.pause();\r\n                    break;\r\n            }\r\n        },\r\n    },\r\n    render() {\r\n        return h(this.tag, this.$slots.default ? [\r\n            this.$slots.default(this.transform({\r\n                days: this.days,\r\n                hours: this.hours,\r\n                minutes: this.minutes,\r\n                seconds: this.seconds,\r\n                milliseconds: this.milliseconds,\r\n                totalDays: this.totalDays,\r\n                totalHours: this.totalHours,\r\n                totalMinutes: this.totalMinutes,\r\n                totalSeconds: this.totalSeconds,\r\n                totalMilliseconds: this.totalMilliseconds,\r\n            })),\r\n        ] : undefined);\r\n    },\r\n});\n\nexport { index as default };\n","import { render } from \"./ComingSoon.vue?vue&type=template&id=0b6bd9fe\"\nimport script from \"./ComingSoon.vue?vue&type=script&lang=js\"\nexport * from \"./ComingSoon.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","href","target","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","src","alt","_hoisted_4","_hoisted_5","_createVNode","_component_vue_countdown","time","$data","default","_withCtx","days","hours","minutes","seconds","_hoisted_6","_hoisted_7","_toDisplayString","_hoisted_8","_ctx","$t","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_","_hoisted_18","_hoisted_19","_createTextVNode","_hoisted_20","year","_hoisted_21","MILLISECONDS_SECOND","MILLISECONDS_MINUTE","MILLISECONDS_HOUR","MILLISECONDS_DAY","EVENT_ABORT","EVENT_END","EVENT_PROGRESS","EVENT_START","EVENT_VISIBILITY_CHANGE","index","defineComponent","name","props","autoStart","type","Boolean","emitEvents","interval","Number","validator","value","now","Function","Date","tag","String","transform","emits","data","counting","endTime","totalMilliseconds","requestId","computed","Math","floor","this","milliseconds","totalDays","totalHours","totalMinutes","totalSeconds","watch","$props","deep","immediate","handler","start","mounted","document","addEventListener","handleVisibilityChange","beforeUnmount","removeEventListener","pause","methods","$emit","visibilityState","continue","delay","min","init","prev","step","range","progress","requestAnimationFrame","end","cancelAnimationFrame","update","abort","max","restart","render","h","$slots","undefined","appOption","useAppOptionStore","newYear","getFullYear","components","VueCountdown","appSidebarHide","appHeaderHide","appContentClass","__exports__"],"sourceRoot":""}