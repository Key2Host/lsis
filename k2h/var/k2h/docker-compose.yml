services:
    core_database:
        container_name: k2h_core_database
        build:
            context: ./db
            dockerfile: Dockerfile
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: k2hrootpw
            MYSQL_DATABASE: k2h
            MYSQL_USER: k2husr
            MYSQL_PASSWORD: k2hpw
        volumes:
            - db:/var/lib/mysql
        networks:
            - network
    apps_dibo:
        container_name: k2h_apps_dibo
        build:
            context: ./apps/dibo
            dockerfile: Dockerfile
        env_file: ./apps/dibo/config.env
        restart: unless-stopped
        networks:
            - network
    core_saci:
        container_name: k2h_core_saci
        build:
            context: ./apps/saci
            dockerfile: Dockerfile
        restart: always
        depends_on:
            - database
        networks:
            - network
    apps_frax:
        container_name: k2h_apps_frax
        build:
            context: ./apps/frax
            dockerfile: Dockerfile
        restart: always
        networks:
            - network
    apps_panel:
        container_name: k2h_apps_panel
        build:
            context: ./apps/panel
            dockerfile: Dockerfile
        restart: always
        networks:
            - network
    apps_docs:
        container_name: k2h_apps_docs
        build:
            context: ./apps/docs
            dockerfile: Dockerfile
        restart: always
        networks:
            - network
    apps_auth:
        container_name: k2h_apps_auth
        build:
            context: ./apps/auth
            dockerfile: Dockerfile
        restart: always
        networks:
            - network
    core_proxy:
        container_name: k2h_core_proxy
        build:
            context: ./proxy
            dockerfile: Dockerfile
        restart: always
        ports:
            - 80:80
            - 443:443
        depends_on:
            - saci
            - apps-frax
            - apps-cp
        networks:
            - network
    core_mailserver:
        image: ghcr.io/docker-mailserver/docker-mailserver:latest
        container_name: k2h_core_mailserver
        hostname: mail.key2host.com
        env_file: ./mailsrv/mailserver.env
        ports:
            - "25:25"
            - "143:143"  # IMAP4 (explicit TLS => STARTTLS)
            - "465:465"  # ESMTP (implicit TLS)
            - "587:587"  # ESMTP (explicit TLS => STARTTLS)
            - "993:993"  # IMAP4 (implicit TLS)
        volumes:
            - mail:/var/mail/
            - mail:/var/mail-state/
            - mail:/var/log/mail/
            - mail:/tmp/docker-mailserver/
            - /var/k2h/mailsrv/certs/fullchain.pem:/etc/letsencrypt/live/mail.key2host.com/fullchain.pem:ro
            - /var/k2h/mailsrv/certs/privkey.pem:/etc/letsencrypt/live/mail.key2host.com/privkey.pem:ro
            - /etc/localtime:/etc/localtime:ro
        restart: always
        stop_grace_period: 1m
        cap_add:
            - NET_ADMIN
        healthcheck:
            test: "ss --listening --tcp | grep -P 'LISTEN.+:smtp' || exit 1"
            timeout: 3s
            retries: 0
        networks:
            - network
    utils_roundcube:
        image: roundcube/roundcubemail:latest
        container_name: k2h_utils_roundcube
        restart: unless-stopped
        ports:
           - "8888:80"
        environment:
            ROUNDCUBEMAIL_DEFAULT_HOST: ssl://mail.key2host.com
            ROUNDCUBEMAIL_DEFAULT_PORT: 993
            ROUNDCUBEMAIL_SMTP_SERVER: ssl://mail.key2host.com
            ROUNDCUBEMAIL_SMTP_PORT: 465
        depends_on:
            - mailserver
        networks:
             - network
    utils_phpmyadmin:
        container_name: k2h_utils_phpmyadmin
        image: phpmyadmin/phpmyadmin
        restart: unless-stopped
        ports:
            - '8080:80'
        environment:
            PMA_HOST: database
            HIDE_PHP_VERSION: true
        depends_on:
            - database
        networks:
            - network
networks:
    network:
        driver: bridge
volumes:
    db:
    mail:
