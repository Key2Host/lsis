#!/bin/bash
set -e

# Portainer
docker volume create portainer_data
docker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest

# System Services laden
systemctl daemon-reload
systemctl enable k2h.service

# Fail2Ban
systemctl enable fail2ban
systemctl start fail2ban

# UFW
echo "Konfiguriere Firewall..."
ufw --force enable
ufw default deny incoming
ufw default allow outgoing
ufw allow 80/tcp        # HTTP
ufw allow 443/tcp       # HTTPS
ufw allow 22/tcp        # SSH
ufw allow 143/tcp       # IMAP4 (explicit TLS => STARTTLS)
ufw allow 465/tcp       # ESMTP (implicit TLS)
ufw allow 587/tcp       # ESMTP (explicit TLS => STARTTLS)
ufw allow 993/tcp       # IMAP4 (implicit TLS)

ufw logging on

# ClamAV
echo "Konfiguriere Antivirus..."
(crontab -l; echo "0 3 * * * /usr/bin/freshclam --quiet") | crontab -
(crontab -l; echo "30 4 * * * /usr/bin/clamscan -r /etc /var /home /usr/local /tmp -i --log=/var/log/clamav/scan.log") | crontab -
systemctl enable clamav-daemon
systemctl start clamav-daemon


# Unattended Upgrades
echo "Konfiguriere Automatische Updates..."
systemctl enable unattended-upgrades
systemctl start unattended-upgrades
(crontab -l; echo "0 3 * * * /usr/bin/unattended-upgrades -d") | crontab -

# Zertifikat abrufen (landet im Standardpfad von Let's Encrypt)
sudo certbot certonly --standalone \
  -d mail.key2host.com \
  --agree-tos \
  --email webmaster@key2host.com \
  --non-interactive

# Zertifikate dorthin kopieren
sudo cp /etc/letsencrypt/live/mail.key2host.com/fullchain.pem /var/k2h/mailsrv/fullchain.pem
sudo cp /etc/letsencrypt/live/mail.key2host.com/privkey.pem /var/k2h/mailsrv/privkey.pem

# Dateiberechtigungen setzen
sudo chmod 644 /var/k2h/mailsrv/fullchain.pem
sudo chmod 600 /var/k2h/mailsrv/privkey.pem

echo "Pre-Installation abgeschlossen."
echo "---"

# Countdown von 10 Sekunden
echo "Das System wird neu gestartet um die Ã„nderungen anzuwenden."
echo "Bitte breche diesen Schritt nicht ab!"
for i in {5..1}
do
    if [ $i -eq 1 ]; then
        echo -ne "-> $i Sekunde verbleibt...\r"  # Einzahl
    else
        echo -ne "-> $i Sekunden verbleiben...\r"  # Mehrzahl
    fi
    sleep 1
done

# Sicherer Neustart des Systems
echo "Das System wird jetzt neu gestartet..."

shutdown -r now
